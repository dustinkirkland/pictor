#!/bin/sh -e
#
#    pictor-rename: a script for renaming pictures sensibly,
#                   prepending a timestamp YYYY-MM-DD_HH-MM-SS__*
#                   on each filename
#    Copyright (C) 2013 Dustin Kirkland <dustin.kirkland@gmail.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.

#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

get_prefix() {
	local mod d t link fulldir dir
	_RET=
	if [ ! -f "$1" ]; then
		return
	fi
	mod=$(exiftool -CreateDate -d %Y-%m-%d_%H-%M-%S__ "$1" | sed -e "s/.*: //") 2>/dev/null
	link=$(readlink -f "$1")
	fulldir=$(dirname "$link")
	dir=$(basename "$fulldir")
	if echo "${mod}" | grep -qs "^[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}_[0-9]\{2\}-[0-9]\{2\}-[0-9]\{2\}__"; then
		# First, try to get create date from image headers
		_RET="${mod}"
	elif echo "$dir" | egrep -qs "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"; then
		# In a dated directory, use that directory's date, and the file's timestamp
		mod=$(stat -c %y "${i}")
		mod=${mod%%.*}
		t=${mod##* }
		t=$(echo "${t}" | sed -e "s/:/-/g")
		_RET="${dir}_${t}__"
	else
		# Otherwise, use file modification timestamp
		mod=$(stat -c %y "${i}")
		mod=${mod%%.*}
		d=${mod%% *}
		t=${mod##* }
		t=$(echo "${t}" | sed -e "s/:/-/g")
		_RET="${d}_${t}__"
	fi
}

get_suffix() {
	_RET=$(echo "$1" | sed -e "s/^.*\.//g" | tr '[:upper:]' '[:lower:]')
}

repair() {
	if [ "$2" != "$3" ]; then
		mv "$2" "$3"
	fi
	get_suffix "$3"
	rename "s/\.${_RET}$/\.${_RET}/i" "$3"
}

progress() {
	echo $1 $2 | awk '{printf "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b[%s/%s] %0.0f%%", $1, $2, 100 * $1 / $2}'
}

echo "INFO: Repairing file names..."
j=0
for i in "$@"; do
	j=$((j+1))
	file=$(basename "${i}")
	dir=$(dirname "${i}")
	if [ "${file}" = "." ] || [ "$file" = ".." ]; then
		progress ${j} $#
		continue
	elif [ ! -f "${dir}/${file}" ]; then
		progress ${j} $#
		continue
	elif echo "${file}" | grep -qs "^[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}_[0-9]\{2\}-[0-9]\{2\}-[0-9]\{2\}__"; then
		progress ${j} $#
		continue
		# TODO: Support --force, to update existing prefix
		#newfile=${file##*__}
	else
		newfile="${file}"
	fi
	get_prefix "${i}"
	prefix="${_RET}"
	dest="${dir}/${prefix}${newfile}"
	repair "${prefix}" "${dir}/${file}" "${dest}"
	progress ${j} $#
done
echo
